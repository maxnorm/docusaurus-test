"use strict";(globalThis.webpackChunkCompose_Documentation=globalThis.webpackChunkCompose_Documentation||[]).push([[4324],{633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting-started/quick-start","title":"Quick Start","description":"Let\'s build your first diamond using Compose facets in under 5 minutes! \ud83d\ude80","source":"@site/docs/getting-started/quick-start.md","sourceDirName":"getting-started","slug":"/getting-started/quick-start","permalink":"/docusaurus-test/docs/getting-started/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/Perfect-Abstractions/Compose/tree/main/docs/docs/getting-started/quick-start.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Installation","permalink":"/docusaurus-test/docs/getting-started/installation"},"next":{"title":"Your First Diamond","permalink":"/docusaurus-test/docs/getting-started/your-first-diamond"}}');var o=t(4848),i=t(8453);const r={sidebar_position:2},a="Quick Start",d={},c=[{value:"What We&#39;ll Build",id:"what-well-build",level:2},{value:"Step 1: Set Up Your Project",id:"step-1-set-up-your-project",level:2},{value:"Step 2: Create Your Diamond Contract",id:"step-2-create-your-diamond-contract",level:2},{value:"Step 3: Deploy Script",id:"step-3-deploy-script",level:2},{value:"Step 4: Create Initialization Facet",id:"step-4-create-initialization-facet",level:2},{value:"Step 5: Test Your Diamond",id:"step-5-test-your-diamond",level:2},{value:"Step 6: Run and Deploy",id:"step-6-run-and-deploy",level:2},{value:"Understanding What Happened",id:"understanding-what-happened",level:2},{value:"The Power of Composition",id:"the-power-of-composition",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"&quot;Cannot find Diamond.sol&quot;",id:"cannot-find-diamondsol",level:3},{value:"&quot;DiamondCut failed&quot;",id:"diamondcut-failed",level:3},{value:"Need Help?",id:"need-help",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,o.jsx)(n.p,{children:"Let's build your first diamond using Compose facets in under 5 minutes! \ud83d\ude80"}),"\n",(0,o.jsx)(n.h2,{id:"what-well-build",children:"What We'll Build"}),"\n",(0,o.jsx)(n.p,{children:"We'll create a simple ERC-20 token diamond that demonstrates:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"How to use Compose facets"}),"\n",(0,o.jsx)(n.li,{children:"How shared storage works"}),"\n",(0,o.jsx)(n.li,{children:"How to deploy and interact with your diamond"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-1-set-up-your-project",children:"Step 1: Set Up Your Project"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Create a new Foundry project\nforge init my-diamond\ncd my-diamond\n\n# Install Compose (when available as dependency)\n# For now, clone the repository\ngit clone https://github.com/Perfect-Abstractions/Compose.git lib/Compose\n"})}),"\n",(0,o.jsx)(n.h2,{id:"step-2-create-your-diamond-contract",children:"Step 2: Create Your Diamond Contract"}),"\n",(0,o.jsxs)(n.p,{children:["Create ",(0,o.jsx)(n.code,{children:"src/MyTokenDiamond.sol"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Diamond} from "compose/Diamond.sol";\n\n/// @title MyTokenDiamond\n/// @notice A diamond that implements ERC-20 functionality\ncontract MyTokenDiamond is Diamond {\n    constructor(\n        address owner,\n        address diamondCutFacet\n    ) Diamond(owner, diamondCutFacet) {\n        // Diamond is initialized and ready to receive facets\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-3-deploy-script",children:"Step 3: Deploy Script"}),"\n",(0,o.jsxs)(n.p,{children:["Create ",(0,o.jsx)(n.code,{children:"script/DeployMyDiamond.s.sol"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Script} from "forge-std/Script.sol";\nimport {MyTokenDiamond} from "../src/MyTokenDiamond.sol";\nimport {DiamondCutFacet} from "compose/facets/DiamondCutFacet.sol";\nimport {ERC20Facet} from "compose/facets/ERC20Facet.sol";\nimport {IDiamondCut} from "compose/interfaces/IDiamondCut.sol";\n\ncontract DeployMyDiamond is Script {\n    function run() external {\n        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");\n        address deployer = vm.addr(deployerPrivateKey);\n        \n        vm.startBroadcast(deployerPrivateKey);\n\n        // 1. Deploy DiamondCutFacet\n        DiamondCutFacet diamondCutFacet = new DiamondCutFacet();\n\n        // 2. Deploy Diamond\n        MyTokenDiamond diamond = new MyTokenDiamond(\n            deployer,\n            address(diamondCutFacet)\n        );\n\n        // 3. Deploy ERC20Facet\n        ERC20Facet erc20Facet = new ERC20Facet();\n\n        // 4. Add ERC20Facet to diamond\n        IDiamondCut.FacetCut[] memory cuts = new IDiamondCut.FacetCut[](1);\n        \n        bytes4[] memory erc20Selectors = new bytes4[](9);\n        erc20Selectors[0] = ERC20Facet.name.selector;\n        erc20Selectors[1] = ERC20Facet.symbol.selector;\n        erc20Selectors[2] = ERC20Facet.decimals.selector;\n        erc20Selectors[3] = ERC20Facet.totalSupply.selector;\n        erc20Selectors[4] = ERC20Facet.balanceOf.selector;\n        erc20Selectors[5] = ERC20Facet.transfer.selector;\n        erc20Selectors[6] = ERC20Facet.allowance.selector;\n        erc20Selectors[7] = ERC20Facet.approve.selector;\n        erc20Selectors[8] = ERC20Facet.transferFrom.selector;\n\n        cuts[0] = IDiamondCut.FacetCut({\n            facetAddress: address(erc20Facet),\n            action: IDiamondCut.FacetCutAction.Add,\n            functionSelectors: erc20Selectors\n        });\n\n        IDiamondCut(address(diamond)).diamondCut(cuts, address(0), "");\n\n        vm.stopBroadcast();\n\n        console.log("Diamond deployed at:", address(diamond));\n        console.log("ERC20Facet deployed at:", address(erc20Facet));\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-4-create-initialization-facet",children:"Step 4: Create Initialization Facet"}),"\n",(0,o.jsx)(n.p,{children:"For initializing your token with name, symbol, and initial supply:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-solidity",children:'// src/facets/TokenInitFacet.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {LibERC20} from "compose/libraries/LibERC20.sol";\n\ncontract TokenInitFacet {\n    function init(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 initialSupply,\n        address recipient\n    ) external {\n        LibERC20.ERC20Storage storage s = LibERC20.getStorage();\n        \n        require(bytes(s.name).length == 0, "Already initialized");\n        \n        s.name = name;\n        s.symbol = symbol;\n        s.decimals = decimals;\n        \n        if (initialSupply > 0) {\n            s.totalSupply = initialSupply;\n            s.balances[recipient] = initialSupply;\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-5-test-your-diamond",children:"Step 5: Test Your Diamond"}),"\n",(0,o.jsxs)(n.p,{children:["Create ",(0,o.jsx)(n.code,{children:"test/MyTokenDiamond.t.sol"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {Test} from "forge-std/Test.sol";\nimport {MyTokenDiamond} from "../src/MyTokenDiamond.sol";\nimport {ERC20Facet} from "compose/facets/ERC20Facet.sol";\nimport {IERC20} from "compose/interfaces/IERC20.sol";\n\ncontract MyTokenDiamondTest is Test {\n    MyTokenDiamond diamond;\n    IERC20 token;\n    \n    address owner = address(1);\n    address user1 = address(2);\n    address user2 = address(3);\n\n    function setUp() public {\n        // Deploy and configure diamond\n        // (Diamond cut logic here - see deploy script)\n        \n        // Cast diamond to IERC20 interface\n        token = IERC20(address(diamond));\n    }\n\n    function test_Transfer() public {\n        vm.prank(owner);\n        token.transfer(user1, 100 ether);\n        \n        assertEq(token.balanceOf(user1), 100 ether);\n    }\n\n    function test_Approve() public {\n        vm.prank(user1);\n        token.approve(user2, 50 ether);\n        \n        assertEq(token.allowance(user1, user2), 50 ether);\n    }\n\n    function test_TransferFrom() public {\n        // Setup: owner has tokens, user1 is approved\n        vm.prank(owner);\n        token.approve(user1, 100 ether);\n        \n        // Act: user1 transfers from owner to user2\n        vm.prank(user1);\n        token.transferFrom(owner, user2, 50 ether);\n        \n        // Assert\n        assertEq(token.balanceOf(user2), 50 ether);\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-6-run-and-deploy",children:"Step 6: Run and Deploy"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Run tests\nforge test\n\n# Deploy to local network\nanvil  # In another terminal\n\n# Deploy\nforge script script/DeployMyDiamond.s.sol:DeployMyDiamond --rpc-url http://localhost:8545 --broadcast\n"})}),"\n",(0,o.jsx)(n.h2,{id:"understanding-what-happened",children:"Understanding What Happened"}),"\n",(0,o.jsx)(n.p,{children:"Let's break down what you just built:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Diamond Base"}),": Your ",(0,o.jsx)(n.code,{children:"MyTokenDiamond"})," inherits from ",(0,o.jsx)(n.code,{children:"Diamond"}),", which provides the core diamond functionality"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Facet Integration"}),": You added ",(0,o.jsx)(n.code,{children:"ERC20Facet"}),", a complete ERC-20 implementation"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Shared Storage"}),": The facet and your initialization logic both use ",(0,o.jsx)(n.code,{children:"LibERC20"})," to access the same storage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Upgradeable"}),": You can add more facets anytime using ",(0,o.jsx)(n.code,{children:"diamondCut()"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"the-power-of-composition",children:"The Power of Composition"}),"\n",(0,o.jsx)(n.p,{children:"Your diamond now has:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u2705 Full ERC-20 functionality"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Upgradeability via diamond cuts"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Ability to add more facets (ERC-721, access control, etc.)"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Separation of concerns (each facet handles one responsibility)"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Congratulations! \ud83c\udf89 You've created your first Compose diamond. Now:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/core-concepts/facets-and-libraries",children:"Learn Core Concepts"})})," - Understand the architecture deeply"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/api/overview",children:"Explore Available Facets"})})," - See what else you can add"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/guides/creating-custom-facets",children:"Custom Facets"})})," - Build your own facets"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/advanced/best-practices",children:"Best Practices"})})," - Write production-ready code"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsx)(n.h3,{id:"cannot-find-diamondsol",children:'"Cannot find Diamond.sol"'}),"\n",(0,o.jsxs)(n.p,{children:["Make sure Compose is properly installed in ",(0,o.jsx)(n.code,{children:"lib/Compose/"})," and your remappings are configured."]}),"\n",(0,o.jsx)(n.h3,{id:"diamondcut-failed",children:'"DiamondCut failed"'}),"\n",(0,o.jsx)(n.p,{children:"Check that:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Function selectors are correct"}),"\n",(0,o.jsx)(n.li,{children:"Facet address is valid"}),"\n",(0,o.jsx)(n.li,{children:"You have the right permissions"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"need-help",children:"Need Help?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\ud83d\udcac ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://discord.gg/compose",children:"Join Discord"})})," - Get immediate help"]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udcda ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/guides/faq",children:"Read FAQ"})})," - Common questions answered"]}),"\n",(0,o.jsxs)(n.li,{children:["\ud83d\udc1b ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://github.com/Perfect-Abstractions/Compose/issues",children:"Report Issues"})})," - Found a bug?"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);